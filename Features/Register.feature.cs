// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASM_GD2.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Register")]
    public partial class RegisterFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "Register.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Register", "A short summary of the feature", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Kiểm thử đăng ký")]
        [NUnit.Framework.CategoryAttribute("DataSource:../Data/Register.csv")]
        [NUnit.Framework.TestCaseAttribute("Nhất Vũ", "shykeuser1", "User19112004", "vunlnph32827@fpt.edu.vn", "0865805582", "19112004", "Hà Nội", "Đăng ký thành công", null)]
        [NUnit.Framework.TestCaseAttribute("Nhất Vũ", "shykeuser2", "User19112004", "vunlnph32827", "0865805582", "19112004", "Hà Nội", "Đăng ký thất bại", null)]
        [NUnit.Framework.TestCaseAttribute("Nhất Vũ", "shykeuser2", "User19112004", "vunlnph32827@fpt.edu.vn", "abc", "19112004", "Hà Nội", "Đăng ký thất bại", null)]
        [NUnit.Framework.TestCaseAttribute("Nhất Vũ", "shykeuser2", "User19112004", "vunlnph32827@fpt.edu.vn", "0865805582", "19112004", "Hà Nội", "Đăng ký thất bại", null)]
        [NUnit.Framework.TestCaseAttribute("Nhất Vũ", "shykeuser2", "19112004", "vunlnph32827@fpt.edu.vn", "0865805582", "19112004", "Hà Nội", "Đăng ký thất bại", null)]
        [NUnit.Framework.TestCaseAttribute("Nhất Vũ", "shykeuser2", "User19112004@", "vunlnph32827@fpt.edu.vn", "0865805582", "19112004", "Hà Nội", "Đăng ký thất bại", null)]
        [NUnit.Framework.TestCaseAttribute("Nhất Vũ", "shykeuser2", "a b c", "vunlnph32827@fpt.edu.vn", "0865805582", "19112024", "Hà Nội", "Đăng ký thất bại", null)]
        public virtual void KiểmThửDangKy(string name, string userName, string password, string email, string sDT, string ngaySinh, string diaChi, string result, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DataSource:../Data/Register.csv"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Name", name);
            argumentsOfScenario.Add("UserName", userName);
            argumentsOfScenario.Add("Password", password);
            argumentsOfScenario.Add("Email", email);
            argumentsOfScenario.Add("SDT", sDT);
            argumentsOfScenario.Add("NgaySinh", ngaySinh);
            argumentsOfScenario.Add("DiaChi", diaChi);
            argumentsOfScenario.Add("result", result);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Kiểm thử đăng ký", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
 testRunner.Given("Truy cập trang web đăng ký: http://localhost:5027/Home/Register", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "UserName",
                            "Password",
                            "Email",
                            "SDT",
                            "NgaySinh",
                            "DiaChi"});
                table1.AddRow(new string[] {
                            string.Format("{0}", name),
                            string.Format("{0}", userName),
                            string.Format("{0}", password),
                            string.Format("{0}", email),
                            string.Format("{0}", sDT),
                            string.Format("{0}", ngaySinh),
                            string.Format("{0}", diaChi)});
#line 8
 testRunner.And("Đăng ký với thông tin:", ((string)(null)), table1, "And ");
#line hidden
#line 11
 testRunner.When("Nhấn nút đăng ký", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 12
 testRunner.Then(string.Format("Hiển thị thông báo: {0}", result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
